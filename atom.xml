<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>FukeYang的博客</title>
  
  <subtitle>不逼自己一把,永远不知道自己能怎样</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-02-27T09:39:49.796Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>FukeYang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>swift</title>
    <link href="http://yoursite.com/2018/02/26/swift/"/>
    <id>http://yoursite.com/2018/02/26/swift/</id>
    <published>2018-02-26T03:44:26.000Z</published>
    <updated>2018-02-27T09:39:49.796Z</updated>
    
    <content type="html"><![CDATA[<h2 id="swift常用知识点"><a href="#swift常用知识点" class="headerlink" title="swift常用知识点"></a>swift常用知识点</h2><h1 id="typealias-用来为已存在的类型重新定义名字"><a href="#typealias-用来为已存在的类型重新定义名字" class="headerlink" title="typealias 用来为已存在的类型重新定义名字"></a>typealias 用来为已存在的类型重新定义名字</h1><p>eg: typealias E = PropertyType</p><h1 id="associatedtype-关联类型，只能在协议中使用，定义一个协议时，有时候声明一个或多个关联类型作为协议定义的一部分将会非常有用。关联类型提供一个占位名，其代表的实际类型在协议被采纳时才会被指定。"><a href="#associatedtype-关联类型，只能在协议中使用，定义一个协议时，有时候声明一个或多个关联类型作为协议定义的一部分将会非常有用。关联类型提供一个占位名，其代表的实际类型在协议被采纳时才会被指定。" class="headerlink" title="associatedtype 关联类型，只能在协议中使用，定义一个协议时，有时候声明一个或多个关联类型作为协议定义的一部分将会非常有用。关联类型提供一个占位名，其代表的实际类型在协议被采纳时才会被指定。"></a>associatedtype 关联类型，只能在协议中使用，定义一个协议时，有时候声明一个或多个关联类型作为协议定义的一部分将会非常有用。关联类型提供一个占位名，其代表的实际类型在协议被采纳时才会被指定。</h1><p>eg: protocol TableViewCell {<br>        associatedtype T<br>        func updateCell(data: T)<br>    }</p><a id="more"></a><h1 id="set和get-赋值、取值的时候调用"><a href="#set和get-赋值、取值的时候调用" class="headerlink" title="set和get 赋值、取值的时候调用"></a>set和get 赋值、取值的时候调用</h1><p>调用set方法的时候，系统会有一个newValue，将newValue赋值给我们定义的变量，然后从get方法里面返回<br>eg:<br>    @objc var houseID: Int {<br>        set { viewModel.house_id = newValue }<br>        get { return viewModel.house_id }<br>    }</p><pre><code>//定义一个变量 var _title: String?var title: String? {    set {        _title=newValue    }    get {        return _title   }}var identifa: String { return NSStringFromClass(T.self) }  </code></pre><p>willSet 属性改变之前调用（有一个newValue参数），didSet 属性改变之后调用（有一个oldValue参数)。<br>属性初始化时，两个方法都不会调用，只有在设置属性值时才会调用，设置的值和原来的值一样时，也会被调用。</p><p>unowned 属性不允许设置为可选类型，必须在init方法中初始化值<br>weak    属性可以是可选类型，即允许有nil值得情况</p><h1 id="访问关键字权限从高到低"><a href="#访问关键字权限从高到低" class="headerlink" title="访问关键字权限从高到低"></a>访问关键字权限从高到低</h1><p>open        都可以访问，也可以override<br>public      只能在当前module中能被继承，其他modele只能访问无法override<br>internal    可以访问自己模块中源文件的任何实体，但是别人不能访问该模块中源文件的实体<br>fileprivate 文件内私有<br>private     只能在类或结构体中访问，作用域外无法访问</p><p>final 声明的类不能被继承，声明的属性、方法、下标不能被重写</p><h1 id="与声明有关的关键字："><a href="#与声明有关的关键字：" class="headerlink" title="与声明有关的关键字："></a>与声明有关的关键字：</h1><p>class、deinit、enum、extension、func、import、init、let、protocol、static、struct、subscript、typealias和var。</p><h1 id="与语句有关的关键字："><a href="#与语句有关的关键字：" class="headerlink" title="与语句有关的关键字："></a>与语句有关的关键字：</h1><p>break、case、continue、default、do、else、fallthrough、if、in、for、return、switch、where和while。</p><h1 id="表达式和类型关键字："><a href="#表达式和类型关键字：" class="headerlink" title="表达式和类型关键字："></a>表达式和类型关键字：</h1><p>as、dynamicType、is、new、super、self、Self、Type、<strong>COLUMN</strong>、<strong>FILE</strong>、<strong>FUNCTION</strong>和<strong>LINE</strong>。</p><h1 id="在特定上下文中使用的关键字："><a href="#在特定上下文中使用的关键字：" class="headerlink" title="在特定上下文中使用的关键字："></a>在特定上下文中使用的关键字：</h1><p>associativity、didSet、get、infix、inout、left、mutating、none、nonmutating、operator、override、postfix、precedence、prefix、rightset、unowned、unowned(safe)、unowned(unsafe)、weak和willSet。</p><h1 id="enum-枚举-支持四种关联值类型：整型、浮点型、字符串、布尔类型。通过rawValue属性来读取枚举的值"><a href="#enum-枚举-支持四种关联值类型：整型、浮点型、字符串、布尔类型。通过rawValue属性来读取枚举的值" class="headerlink" title="enum 枚举 支持四种关联值类型：整型、浮点型、字符串、布尔类型。通过rawValue属性来读取枚举的值"></a>enum 枚举 支持四种关联值类型：整型、浮点型、字符串、布尔类型。通过rawValue属性来读取枚举的值</h1><p>通过关联值将额外信息附加到enum case上<br>eg：<br>enum Trade {<br>    case Buy(stock: String, amount: Int)<br>    case Sell(stock: String, amount: Int)<br>}</p><p>sizeToFit:会计算出最优的 size 而且会改变自己的size<br>sizeThatFits:会计算出最优的 size 但是不会改变 自己的 size</p><h1 id="泛型"><a href="#泛型" class="headerlink" title="泛型"></a>泛型</h1><p>swift的基本类型String，Int，Double，Bool和无关联值得枚举都是遵循Hashable协议，Hashable协议遵守Equatable协议，提供hashValue方法用在判断遵循协议对象是否相等时用。</p><p>函数、扩展和关联类型都可以使用where语句，where语句是对泛型在应用时的一种约束。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;swift常用知识点&quot;&gt;&lt;a href=&quot;#swift常用知识点&quot; class=&quot;headerlink&quot; title=&quot;swift常用知识点&quot;&gt;&lt;/a&gt;swift常用知识点&lt;/h2&gt;&lt;h1 id=&quot;typealias-用来为已存在的类型重新定义名字&quot;&gt;&lt;a href=&quot;#typealias-用来为已存在的类型重新定义名字&quot; class=&quot;headerlink&quot; title=&quot;typealias 用来为已存在的类型重新定义名字&quot;&gt;&lt;/a&gt;typealias 用来为已存在的类型重新定义名字&lt;/h1&gt;&lt;p&gt;eg: typealias E = PropertyType&lt;/p&gt;
&lt;h1 id=&quot;associatedtype-关联类型，只能在协议中使用，定义一个协议时，有时候声明一个或多个关联类型作为协议定义的一部分将会非常有用。关联类型提供一个占位名，其代表的实际类型在协议被采纳时才会被指定。&quot;&gt;&lt;a href=&quot;#associatedtype-关联类型，只能在协议中使用，定义一个协议时，有时候声明一个或多个关联类型作为协议定义的一部分将会非常有用。关联类型提供一个占位名，其代表的实际类型在协议被采纳时才会被指定。&quot; class=&quot;headerlink&quot; title=&quot;associatedtype 关联类型，只能在协议中使用，定义一个协议时，有时候声明一个或多个关联类型作为协议定义的一部分将会非常有用。关联类型提供一个占位名，其代表的实际类型在协议被采纳时才会被指定。&quot;&gt;&lt;/a&gt;associatedtype 关联类型，只能在协议中使用，定义一个协议时，有时候声明一个或多个关联类型作为协议定义的一部分将会非常有用。关联类型提供一个占位名，其代表的实际类型在协议被采纳时才会被指定。&lt;/h1&gt;&lt;p&gt;eg: protocol TableViewCell {&lt;br&gt;        associatedtype T&lt;br&gt;        func updateCell(data: T)&lt;br&gt;    }&lt;/p&gt;
    
    </summary>
    
      <category term="swift" scheme="http://yoursite.com/categories/swift/"/>
    
    
      <category term="swift" scheme="http://yoursite.com/tags/swift/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2018/02/26/hello-world/"/>
    <id>http://yoursite.com/2018/02/26/hello-world/</id>
    <published>2018-02-26T03:23:19.531Z</published>
    <updated>2018-02-26T03:23:19.532Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
